<?xml version="1.0"?>
<robot xmlns:xacro="http://ros.org/wiki/xacro">

  <!-- Gazebo colors -->
  <gazebo reference="base_link">
    <material>Gazebo/Blue</material>
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <self_collide>true</self_collide>
  </gazebo>

  <!-- Wheel materials and friction -->
  <gazebo reference="front_left_wheel_link">
    <material>Gazebo/DarkGrey</material>
    <mu1>1.0</mu1>
    <mu2>1.0</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
    <fdir1>1 0 0</fdir1>
  </gazebo>

  <gazebo reference="front_right_wheel_link">
    <material>Gazebo/DarkGrey</material>
    <mu1>1.0</mu1>
    <mu2>1.0</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
    <fdir1>1 0 0</fdir1>
  </gazebo>

  <gazebo reference="rear_left_wheel_link">
    <material>Gazebo/DarkGrey</material>
    <mu1>1.0</mu1>
    <mu2>1.0</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
    <fdir1>1 0 0</fdir1>
  </gazebo>

  <gazebo reference="rear_right_wheel_link">
    <material>Gazebo/DarkGrey</material>
    <mu1>1.0</mu1>
    <mu2>1.0</mu2>
    <kp>1000000.0</kp>
    <kd>100.0</kd>
    <minDepth>0.001</minDepth>
    <maxVel>1.0</maxVel>
    <fdir1>1 0 0</fdir1>
  </gazebo>

  <gazebo reference="lidar_link">
    <material>Gazebo/Black</material>
  </gazebo>

  <gazebo reference="camera_link">
    <material>Gazebo/Red</material>
  </gazebo>

  <gazebo reference="camera_gimbal_base">
    <material>Gazebo/Grey</material>
  </gazebo>

  <gazebo reference="camera_gimbal_pan">
    <material>Gazebo/Grey</material>
  </gazebo>

  <gazebo reference="camera_gimbal_tilt">
    <material>Gazebo/Grey</material>
  </gazebo>

  <gazebo reference="imu_link">
    <material>Gazebo/Green</material>
  </gazebo>

  <!-- Mecanum Drive Plugin -->
  <gazebo>
    <plugin name="mecanum_drive_controller" filename="libgazebo_ros_planar_move.so">
      <ros>
        <namespace>/</namespace>
        <remapping>cmd_vel:=cmd_vel</remapping>
        <remapping>odom:=odom</remapping>
      </ros>
      
      <update_rate>50</update_rate>
      <publish_rate>50</publish_rate>
      
      <!-- Robot physical parameters -->
      <robot_base_frame>base_footprint</robot_base_frame>
      <odometry_frame>odom</odometry_frame>
      <odometry_source>world</odometry_source>
      
      <!-- Enable covariance -->
      <covariance_x>0.0001</covariance_x>
      <covariance_y>0.0001</covariance_y>
      <covariance_yaw>0.01</covariance_yaw>
      
      <!-- Publish transforms -->
      <publish_odom>true</publish_odom>
      <publish_odom_tf>true</publish_odom_tf>
      <publish_wheel_tf>false</publish_wheel_tf>
    </plugin>
  </gazebo>

  <!-- Alternative: Four-wheel drive plugin for more realistic mecanum behavior -->
  <!-- 
  <gazebo>
    <plugin name="mecanum_drive_controller" filename="libgazebo_ros_diff_drive.so">
      <ros>
        <namespace>/</namespace>
      </ros>
      
      <left_joint>front_left_wheel_joint</left_joint>
      <right_joint>front_right_wheel_joint</right_joint>
      <left_joint>rear_left_wheel_joint</left_joint>
      <right_joint>rear_right_wheel_joint</right_joint>
      
      <wheel_separation>0.169</wheel_separation>
      <wheel_diameter>0.1016</wheel_diameter>
      
      <max_wheel_torque>20</max_wheel_torque>
      <max_wheel_acceleration>1.0</max_wheel_acceleration>
      
      <command_topic>cmd_vel</command_topic>
      <odometry_topic>odom</odometry_topic>
      <odometry_frame>odom</odometry_frame>
      <robot_base_frame>base_footprint</robot_base_frame>
      
      <publish_odom>true</publish_odom>
      <publish_odom_tf>true</publish_odom_tf>
      <publish_wheel_tf>false</publish_wheel_tf>
      
      <update_rate>50</update_rate>
    </plugin>
  </gazebo>
  -->

  <!-- LIDAR Plugin -->
  <gazebo reference="lidar_link">
    <sensor type="ray" name="ld06_lidar">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>10</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>360</samples>
            <resolution>1</resolution>
            <min_angle>-3.14159</min_angle>
            <max_angle>3.14159</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.12</min>
          <max>12</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_ray_sensor.so">
        <ros>
          <namespace>/</namespace>
          <remapping>~/out:=ldlidar_node/scan</remapping>
        </ros>
        <output_type>sensor_msgs/LaserScan</output_type>
        <frame_name>lidar_link</frame_name>
      </plugin>
    </sensor>
  </gazebo>

  <!-- Camera Plugin -->
  <gazebo reference="camera_link">
    <sensor type="camera" name="camera">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <ros>
          <namespace>/</namespace>
          <remapping>image_raw:=ascamera/camera_publisher/rgb0/image</remapping>
          <remapping>camera_info:=ascamera/camera_publisher/rgb0/camera_info</remapping>
        </ros>
        <camera_name>ascamera</camera_name>
        <frame_name>camera_optical_link</frame_name>
        <hack_baseline>0.07</hack_baseline>
      </plugin>
    </sensor>
  </gazebo>

  <!-- Depth Camera Plugin (Additional for depth sensing) -->
  <gazebo reference="camera_link">
    <sensor type="depth" name="depth_camera">
      <update_rate>20</update_rate>
      <camera>
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
        </image>
        <clip>
          <near>0.02</near>
          <far>10.0</far>
        </clip>
      </camera>
      <plugin name="depth_camera_controller" filename="libgazebo_ros_depth_camera.so">
        <ros>
          <namespace>/</namespace>
          <remapping>image_raw:=ascamera/camera_publisher/rgb0/depth/image_raw</remapping>
          <remapping>image_raw/compressed:=ascamera/camera_publisher/rgb0/compressedDepth</remapping>
          <remapping>points:=ascamera/camera_publisher/rgb0/points</remapping>
          <remapping>camera_info:=ascamera/camera_publisher/rgb0/depth/camera_info</remapping>
        </ros>
        <camera_name>ascamera_depth</camera_name>
        <frame_name>camera_optical_link</frame_name>
        <hack_baseline>0.07</hack_baseline>
      </plugin>
    </sensor>
  </gazebo>

  <!-- IMU Plugin -->
  <gazebo reference="imu_link">
    <gravity>true</gravity>
    <sensor name="imu_sensor" type="imu">
      <always_on>true</always_on>
      <update_rate>100</update_rate>
      <visualize>true</visualize>
      <topic>__default_topic__</topic>
      <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
        <ros>
          <namespace>/</namespace>
          <remapping>~/out:=imu</remapping>
        </ros>
        <initial_orientation_as_reference>false</initial_orientation_as_reference>
      </plugin>
      <pose>0 0 0 0 0 0</pose>
    </sensor>
  </gazebo>

  <!-- Joint State Publisher Plugin -->
  <gazebo>
    <plugin name="joint_state_publisher" filename="libgazebo_ros_joint_state_publisher.so">
      <ros>
        <namespace>/</namespace>
        <remapping>~/out:=joint_states</remapping>
      </ros>
      <update_rate>50</update_rate>
      <joint_name>front_left_wheel_joint</joint_name>
      <joint_name>front_right_wheel_joint</joint_name>
      <joint_name>rear_left_wheel_joint</joint_name>
      <joint_name>rear_right_wheel_joint</joint_name>
      <joint_name>camera_gimbal_pan_joint</joint_name>
      <joint_name>camera_gimbal_tilt_joint</joint_name>
    </plugin>
  </gazebo>

  <!-- Gimbal Control Plugin for Camera -->
  <gazebo>
    <plugin name="gimbal_controller" filename="libgazebo_ros_joint_pose_trajectory.so">
      <ros>
        <namespace>/gimbal</namespace>
      </ros>
      <update_rate>50</update_rate>
    </plugin>
  </gazebo>

</robot>
